{
  "hash": "9f6ea894d7fec01b348dae743c4b863c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ncategories: \"Lab 3\"\ntitle: \"Lab 3: Data Visualization with ggplot2\"\nexecute:\n  eval: true\nformat:\n  html:\n    code-link: true #Supposed to create a link to documentation but its not, for some reason.\n   # code-block-bg: true # \"lightblue\" Does not work well with dark mode.\n    code-block-border-left: \"#31BAE9\"\n    code-fold: show #also try true OR false and decide if you like it.\n    code-tools: false\n    code-copy: true\n---\n\n\n\n\n\n## [Introduction]{style=\"color:#4166f5;\"}\n\nIn this lab, we introduce a popular package called `ggplot2` used for data visualization. This package is contained within the `tidyverse` package (already installed) so we do not need to install it separately. The term `ggplot` stands for \"Grammar of Graphics Plot\" which is a system for declaratively creating graphics. It provides a programmatic interface for specifying **what variables to plot**, how they are **displayed**, and general **visual properties**. The package allows users to create a wide variety of high-quality and customizable statistical graphs, making it a valuable tool for data exploration and presentation.\n\n\n## [Creating your Quarto File]{style=\"color:#4166f5;\"}\nGo to posit cloud (<https://posit.cloud>) and open the MATH 144 project. \nOnce you are in, clean up the console, clear the environment, and close any open files.\n\nNext, create your new quarto file as follows:\n\n-   File\\>New File \\> Quarto document. In the title field use `Introducing ggplot2` then write your name under the `Author` field. Change the output option to `pdf`.\n\n-   Next, save the document as `Lab_2_Explo`. If you did it correctly, the file `Lab_3_Explo.qmd` should appear under the files section.\n\nDelete all text in the document except the YAML header. This leaves a clean document ready for you to write your work.\n\n## [Packages]{style=\"color:#4166f5;\"}\n\nWe will need `openintro` and `tidyverse` packages in this lab. Create a level 2 header and call it Packages. Under this, create a new code chunk and load the two packages as follows:\n\n``` toml\nlibrary(openintro)\nlibrary(tidyverse)\n```\n\nNow, render the document to check if it produces a pdf. The output of the package code chunk is not something you want to reproduce in your document. To hide the output, you can use the option `include = FALSE` in the code chunk options. See code below:\n\n\n\n\n\n\n\n\n## [Loading the Data]{style=\"color:#4166f5;\"}\n\nWe will need the`duke_forest` dataset contained in the `openintro` package. Load the data as shown below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(duke_forest)\n```\n:::\n\n\n\nThis data were used in lab 2 but you can use the help function `?loan50` to pull the documentation for the data. Note that although you had loaded the data in a previous lab, you loaded it in specific documents. Every time you want to use the data in a new quarto document, you have to load it again.\n\n\n## [Data Visualization: Numerical Variables]{style=\"color:#4166f5;\"}\n\n### [One Numerical Variable]{style=\"color:#4166f5;\"}\n\nIn `Lab 2`, we computed numerical summary statistics using the variable `price` in the `duke_forest` data set. You also learned about ***base R*** and ***Tidyverse*** approaches for finding the statistics. In this lab, we demonstrate how to use the `ggplot2` package to create various visualizations for the `price` variable.\n\n#### [Dot Plot]{style=\"color:#4166f5;\"}\n\nThere are three basic steps in creating visualizations using `ggplot2`. The function is called `ggplot()`. The steps include:\n\n-   ***Step 1:*** Add the data argument and set the value to the data set name as shown below then run the code. You will notice a blank canvas.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = duke_forest)\n```\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n-   ***Step 2:*** Add variables using the `mapping` argument and the sub function `aes` (aesthetics). This step defines how variables should be mapped on the axes. Since we are dealing with one variable here (price), we will just use the $x-axis$. See code below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = duke_forest, \n       mapping = aes(x = price)\n       )\n```\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n-   **Step 3:** Define the visual properties. To define the visual properties, we use the `geom` (short form for geometry) function. In our case, we want to use dotplot and so we **add** the function `geom_dotplot()`. Notice that you must have the parentheses because this is a function that can take more arguments (you will learn more about this) to further define the nature of the dots added.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = duke_forest, \n       mapping = aes(x = price)\n       ) + \n       geom_dotplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n#### [Histogram]{style=\"color:#4166f5;\"}\n\nAnother tool we can use to visualize the distribution of a single numerical variable is a histogram. To create a histogram for the `price` variable, we follow the exact same steps as above but only change the `geom_dotplot` part to `geom_histogram`. See below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=duke_forest, \n       mapping = aes(x = price)\n       ) + \n       geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n#### [Boxplot]{style=\"color:#4166f5;\"}\n\nWe can also create a boxplot in the same way but change the geometry to `geom_boxplot`. See below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = duke_forest, \n       mapping = aes(x=price)\n       ) + \n       geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n***Questions:***\n\n-   By examining the tools created above, how would you describe the distribution of the prices? What is the advantages of dot plot over the histogram? What about the box plot over the histogram?\n-   In Lab 2, we computed the mean as one of the numerical summary statistics for the price. Do you think the mean is a good measure of the typical house price in Duke Forest? Why or why not?\n\nMeasure of Spread \n\nYou can compute various measures of spread using the `summarise` function. For example, to compute the variance for the price variable, you can use the code below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduke_forest |> \n  summarise(var(price))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  `var(price)`\n         <dbl>\n1 50826826193.\n```\n\n\n:::\n:::\n\n\n\nTo find the standard deviation, take the square root of variance or use the function below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduke_forest |> \n  summarise(sd(price))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  `sd(price)`\n        <dbl>\n1     225448.\n```\n\n\n:::\n:::\n\n\n\nTo find the first and third quartiles in one step, you can use the `quantile` function as shown below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduke_forest |> \n  summarise(quantile(price, 0.25),\n            quantile(price, 0.75))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  `quantile(price, 0.25)` `quantile(price, 0.75)`\n                    <dbl>                   <dbl>\n1                  450625                  643750\n```\n\n\n:::\n:::\n\n\n\n\n### [Two Numerical Variables]{style=\"color:#4166f5;\"}\n\n#### [Scatter Plots]{style=\"color:#4166f5;\"}\n\nIn many cases, we want to assess relationships between two numerical variables. A scatter plot is the most commonly used visualization tool for this. To create a scatter plot, you just need to specify the variable on the $x-axis$ and the one on the $y-axis$. In addition, you will use `geom_point` as the geometry.\n\nSuppose we want to assess the association between `price` and `area`. You can achieve this by using the below. Take a moment to study this code before you run it.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = duke_forest, \n       mapping = aes(x = area, y = price)\n       ) + \n       geom_point()\n```\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n***Question*** - What pattern do you notice from the above scatter plot? Is this what you expected?\n\nYou can add some layer of complexity to the scatter plot to allow you compare three variables. For example, you may want to compare the relationship between price and area by cooling. To do this, you use the color argument as shown below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = duke_forest, \n       mapping = aes(x=area, y = price, color = cooling)\n       ) + \n       geom_point()\n```\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n***Question*** - What do you notice in this new scatter plot that you did not notice in the previous one?\n\n## [Data Visualization: Categorical Variables]{style=\"color:#4166f5;\"}\n\n### [Single categorical Variable]{style=\"color:#4166f5;\"}\n\nYou can visualize a single categorical variable using tools such as simple bar plots and pie charts.\n\n### [Simple Bar Plot]{style=\"color:#4166f5;\"}\n\nOne of the categorical variables in the `duke_forest` data set is `cooling` (central air vs other). Suppose we want to visualize the distribution of the houses by the type of cooling. The variable named `cooling` has values central air or other. We follow the same steps as for creating a dot plot, but change the geometry to `geom_bar()`. See code below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = duke_forest, \n       mapping = aes(x = cooling)\n       ) + \n       geom_bar()\n```\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\nThe bar plot shows that there are slightly fewer houses with central air cooling system that those with \"other\" types of cooling systems.\n\nIn case you want to color the bars by cooling, you can use the `fill` argument inside the `aes` function as shown below the bars using some colors. See below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = duke_forest, \n       mapping = aes(x = cooling, fill=cooling)\n       ) + \n       geom_bar()\n```\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n### [Two Categorical Variables]{style=\"color:#4166f5;\"}\n\nWe can use stacked bar plots or side-by-side bar plots to visualize two categorical variables. For example, to visualize the relationship between `cooling` and `heating`, we can simply fill the bars by `heating` as shown below:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=duke_forest, \n       mapping = aes(x = cooling, fill = heating)\n       ) +\n       geom_bar()\n```\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\nThis visualization is not easy to interpret. Using side-by-side (or dodged) bar plots may be a better option. To do this, we just add the `position` argument inside the `geom_bar()` function as shown below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = duke_forest, \n       mapping = aes(x = cooling, fill = heating)\n       ) +\n       geom_bar(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n## [Numerical variable by Category]{style=\"color:#4166f5;\"}\n\nIn some cases, you may want to visualize the distribution of a numerical variable by a categorical variable. For example, suppose we want to see the distrivution of price of homes based on type of heating. We can achieve this using `side-by-side` box plots as shown below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = duke_forest, \n       mapping = aes(x = cooling, y = price)\n       ) +\n       geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\nAgain, you can color the box plots by cooling, or any other categorical variable. See code below that colors the box plots by cooling:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = duke_forest, \n       mapping = aes(x = cooling, y = price, fill = cooling)\n       ) +\n       geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n\n## [Exercises]{style=\"color:#4166f5;\"}\n\nCreate a new quarto document and save it as `lab_3_Exe`. Answer the following questions in this document. This lab needs `openintro` and `tidyverse` packages and the `loan50` data set. You can use the code below for this:\n\n```toml\n#| include: false\nlibrary(openintro)\nlibrary(tidyverse)\ndata(loan50)\n```\n\n1.  **(3 pts)** Create a ***dot plot*** to visualize the distribution of the variable `loan_amount`. Comment on the distribution of this variable.\n\n2. **(3 pts)** Create a ***box plot*** to visualize the distribution of the variable `interest_rate`. Comment on the distribution of this variable. Are there any outliers?\n\n3.  **(3 pts)** Create a simple ***bar plot*** to visualize the distribution of the variable `loan_purpose`. What can you say based on this plot? (**NOTE:** consider placing the variable on the y-axis instead of the x-axis).\n\n4.  **(3 pts)** Suppose we want to answer the question, \"do people with higher `total_income` tend to have higher `loan_amount`?. Create a ***scatter plot*** and use it to answer this question.\n\n5.  **(4 pts)** Create a new ***scatter plot*** that colors the dots on the scatter plot in question 6 above using the categorical variable `has_second_income` (i.e., whether someone has a second income or not). What new insights, if any, do you get from this scatter plot?\n\n6. **(4 pts)** Create side-by-side box plots to visualize the distribution of `annual_income` based on `homeownership`. What insights can you draw from the plot? Why do you think there is such a pattern?\n\n<!-- Here is the key to the exercises above.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"loan50\")\n```\n:::\n\n\n\nVisualize loan_amount using a dot plot.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = loan50, \n       mapping = aes(x = loan_amount)\n       ) + \n       geom_dotplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nBox plot for interest_rate\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = loan50, \n       mapping = aes(x = interest_rate)\n       ) + \n       geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\nBar plot for loan_purpose\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = loan50, \n       mapping = aes(y = loan_purpose)\n       ) + \n       geom_bar()\n```\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\nScatter plot for total_income vs loan_amount\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = loan50, \n       mapping = aes(x = total_income, y = loan_amount)\n       ) + \n       geom_point()\n```\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n\n\nScatter plot colored by has_second_income\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = loan50, \n       mapping = aes(x = total_income, y = loan_amount, color = has_second_income)\n       ) + \n       geom_point()\n```\n\n::: {.cell-output-display}\n![](Lab_3_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n-->\n\n\n\n",
    "supporting": [
      "Lab_3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}